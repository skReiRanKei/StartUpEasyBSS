@model EasyBBS.Models.ApplicationDbContext.BoardEntity
@{
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    ViewBag.Title = Model.Title;
}

<div class="main-page-content-wrapper">

    <div class="container">

        <h2 class="text-center my-4">@Model.Title</h2> 


        <div class="card my-4">

            <div class="card-header bg-primary text-white">

                <h5 class="mb-0">投稿詳細</h5>
            </div>
            <div class="card-body">
                <dl class="row mb-3">
                    
                    <dt class="col-sm-2">投稿日時:</dt>
                    <dd class="col-sm-10">@Model.PostedDate.ToString("yyyy/MM/dd HH:mm")</dd>
                </dl>
                <hr />
                <div class="board-text-content">
                    
                    @Html.Raw(Model.Text.Replace("\n", "<br />")) 
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-center gap-3 my-4">
            @Html.ActionLink("一覧に戻る", "Index", null, new { @class = "btn btn-secondary btn-lg" })
            @Html.ActionLink("編集", "Edit", new { id = Model.Id }, new { @class = "btn btn-outline-info btn-lg" })
            @Html.ActionLink("この掲示板を削除", "Delete", new { id = Model.Id }, new { @class = "btn btn-danger btn-lg" })
        </div>

        <hr class="my-4" />

        <h3 class="my-4">返信</h3> 
        @if (Model.Posts != null && Model.Posts.Any())
        {
            <div class="list-group mb-4">
                
                @foreach (var post in Model.Posts)
                {
                    <div class="list-group-item list-group-item-action">
                        <p class="mb-1">@post.Text</p>
                        <small class="text-muted text-right">投稿日時: @post.PostedDate.ToString("yyyy/MM/dd HH:mm")</small> 
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info text-center my-4" role="alert">
                まだ返信はありません。
            </div>
        }

        @* 返信投稿フォーム *@
        <h3 class="my-4">返信を投稿する</h3> 
        <div class="card mb-4">
            <div class="card-body">
                @using (Html.BeginForm("PostResponse", "Board", new { Id = Model.Id }, FormMethod.Post))
                {
                    @Html.AntiForgeryToken() 
                    <div class="form-group mb-3">
                        @Html.TextArea("Text", "", new { @class = "form-control", rows = 5, placeholder = "返信内容を入力してください" }) 
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="submit" value="返信を投稿" class="btn btn-primary btn-lg">返信を投稿</button> 
                    </div>
                }
            </div>
        </div>

        <hr class="my-4" />
        <div class="text-center mb-4">
            @Html.ActionLink("ホームに戻る", "Index", "Base", null, new { @class = "btn btn-outline-dark" }) 
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}